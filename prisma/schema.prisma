generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WorkoutLog {
  id            String     @id @default(uuid())
  formattedDate String?    @unique
  notes         String?
  tags          String?
  movements     Movement[]
}

model Movement {
  id         String     @id @default(uuid())
  name       String
  // Optional link to an Exercise record for data consistency
  exerciseId Int?
  exercise   Exercise?  @relation(fields: [exerciseId], references: [id])
  log        WorkoutLog @relation(fields: [logId], references: [id], onDelete: Cascade)
  logId      String
  sets       Set[]
  dropsets   Dropset[]
}

model Set {
  id         String    @id @default(uuid())
  movement   Movement  @relation(fields: [movementId], references: [id], onDelete: Cascade)
  movementId String
  weight     Float
  reps       Float
  setNumber  Float
}

model Dropset {
  id         String    @id @default(uuid())
  movement   Movement  @relation(fields: [movementId], references: [id], onDelete: Cascade)
  movementId String
  weight     Float
  reps       Float
  setNumber  Float
}

model ExercisePR {
  id           String   @id @default(uuid())
  exerciseName String
  bestWeight   Float
  bestReps     Float
  workoutDate  DateTime
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Exercise {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  movements  Movement[]
}